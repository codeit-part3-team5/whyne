"use client";

import { useQuery } from "@tanstack/react-query";
import { useParams } from "next/navigation";

import WineCard from "@/components/about-wine/WineCard";
import ReviewList from "@/components/wine-detail/review-list/ReviewList";
import ReviewOverview from "@/components/wine-detail/review-overview/ReviewOverview";
import { WineDetailData, WineType } from "@/types/Wine";
import { convertStringsToAroma } from "@/utils/aromaConverter";
import { getWineDetail } from "@/apis/winesApi";
import Spinner from "@/components/Spinner";

export default function WineDetailPage() {
  const { id } = useParams();
  const wineId = typeof id === "string" ? id : "";
  
  const {
    data: wineData,
    isLoading,
    error,
  } = useQuery({
    queryKey: ["wine", wineId],
    queryFn: async () => {
      try {
        console.log('API 호출 시작, ID:', wineId);
        const data = await getWineDetail(wineId);
        console.log('API 응답 데이터:', data);
        return data;
      } catch (err) {
        console.error('API 호출 오류:', err);
        throw err;
      }
    },
    select: (data) => {
      console.log('데이터 변환 중:', data);
      return {
        ...data,
        type: data.type as WineType,
        reviews: data.reviews.map((r) => ({
          ...r,
          aroma: convertStringsToAroma(r.aroma),
        })),
        recentReview: data.recentReview
          ? { ...data.recentReview, aroma: convertStringsToAroma(data.recentReview.aroma ?? []) }
          : null,
      };
    },
    enabled: !!wineId,
    retry: 1, // 실패 시 한 번만 재시도
  });

  // 로딩 중 UI
  if (isLoading) {
    return (
      <div className="flex justify-center items-center min-h-screen">
        <Spinner />
      </div>
    );
  }

  // 에러 UI
  if (error) {
    return (
      <div className="flex justify-center items-center min-h-screen text-red-500">
        데이터를 불러오는 중 오류가 발생했습니다
      </div>
    );
  }

  // 데이터가 없을 때 UI
  if (!wineData) {
    return (
      <div className="flex justify-center items-center min-h-screen">
        와인 정보를 찾을 수 없습니다
      </div>
    );
  }

  // 메인 UI
  return (
    <main className="flex flex-col items-center py-10 gap-[3.75rem] max-mb:gap-[2.5rem]">
      <WineCard data={wineData} />
      <div className="flex w-full max-w-[71.25rem] gap-[1.875rem] max-tb:flex-col-reverse items-start justify-center max-tb:items-center">
        <div className="flex-grow w-full max-mb:w-full max-w-[50rem]">
          <ReviewList wine={wineData} />
        </div>
        <ReviewOverview wine={wineData} />
      </div>
    </main>
  );
}
